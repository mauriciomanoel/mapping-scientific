@article{20170903387298 ,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2020 Elsevier Inc.},
copyright = {Compendex},
title = {PERSA: A Requirements Specification Process for Self-Adaptive Systems Based on Fuzzy Logic and NFR-Framework},
journal = {International Journal of Uncertainty, Fuzziness and Knowlege-Based Systems},
author = {Paraiba, Joao Dionisio and Martins, Luiz Eduardo G.},
volume = {25},
number = {1},
year = {2017},
pages = {145 - 178},
issn = {02184885},
abstract = {Self-Adaptive Systems are able to change their behavior at runtime according to the environment where they are. This study presents an approach to specify the requirements for self-adaptive systems based on the concepts of Fuzzy Logic, which deals with factors such as ambiguity, uncertainties and vague information on the solution of problems; and NFR-Framework, which deals with the non-functional requirements which, very often, vaguely and full of uncertainties present themselves. Adaptive systems consist of (functional and non-functional) requirements, which hold the capacity to modify themselves during the runtime with little or no human intervention at all. Requirements that carry out the feature of wide variability are called adaptive requirements. PERSA (acronym from "Processo de Especifica&ccedil;&atilde;o de Requisitos Adaptativos", in Portuguese) is reported in this work, using the Fuzzy Logic and the NFR-Framework as a basis, since both offers resources to manage uncertainties, an inherent attribute of self-adaptive systems. This process aims the approach of specification of adaptive requirements in a systematic way providing a guide to support requirements engineers. PERSA Process is settled in three mains phases subdivided into several steps. Two case studies were developed to validate it: the first deals with an automated system to prepare steaks, which needs to adapt to its several types; the second relates to a system for automation for canine diets, which must be adapted to different breeds of dogs according to their size, weight and classification. The case studies provide a first approach of the use and benefits of PERSA Process. In these studied the theoretical proposal was evaluated and discussed in order to establish the degree of understanding, the clarity of activities and the necessary adjustments to improve the proposed achievements, thus obtaining a satisfactory though early assessment which answers the purpose of specifying the requirements for self-adaptive systems.<br/> &copy; 2017 World Scientific Publishing Company.},
key = {Adaptive systems},
keywords = {Automation;Computer circuits;Fuzzy logic;Specifications;},
note = {adaptive requirements;Automated systems;Human intervention;NFR-framework;Non-functional;Non-functional requirements;Requirements specifications;Self-adaptive system;},
URL = {http://dx.doi.org/10.1142/S0218488517500064},
} 


@inproceedings{20143118006770 ,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2020 Elsevier Inc.},
copyright = {Compendex},
title = {1st Asia Pacific Requirements Engineering Symposium, APRES 2014},
journal = {Communications in Computer and Information Science},
volume = {432 CCIS},
year = {2014},
issn = {18650929},
address = {Auckland, New zealand},
abstract = {The proceedings contain 16 papers. The special focus in this conference is on Software and Systems Development. The topics include: A process-oriented conceptual framework on non-functional requirements; a multi criteria decision analysis technique for non-functional requirements conflicts; analysis of economic impact of online reviews; an IT-driven business requirements engineering methodology; addressing the challenges of alignment of requirements and services; a collaborative method for business process oriented requirements acquisition and refining; modeling and specifying parametric adaptation mechanism for self-adaptive systems; evaluating presentation of requirements documents; impact analysis of granularity levels on feature location technique; a pair-oriented requirements engineering approach for analysing multi-lingual requirements; an empirical cognitive model of the development of shared understanding of requirements; evaluating the cognitive effectiveness of the visual syntax of feature diagrams; the role of requirements engineering practices in agile development and support method to elicit accessibility requirements.},
} 


@inproceedings{2004098040005 ,
language = {English},
copyright = {Compilation and indexing terms, Copyright 2020 Elsevier Inc.},
copyright = {Compendex},
title = {Customizing AOSE Methodologies by Reusing AOSE Features},
journal = {Proceedings of the International Conference on Autonomous Agents},
author = {Juan, Thomas and Sterling, Leon and Martelli, Maurizio and Mascardi, Viviana},
volume = {2},
year = {2003},
pages = {113 - 120},
address = {Melbourne, Vic., Australia},
abstract = {Future large-scale software development projects will require engineering support for a diverse range of software quality attributes, such as privacy and openness. It is not feasible to create one monolithic methodology to support all possible quality attributes. Instead, we expect AOSE methodologies to be created and reused in a modular way. A modular approach enables developers to build custom project-specific methodologies from AOSE features in the same way applications are built from reusable off-the-shelf components. In this paper, we provide a conceptual framework for creating and reusing modular methodologies. This conceptual framework is based on the concept of an AOSE feature, which performs one or more development activities, such as analysis, and addresses one or more quality attributes, such as privacy. An AOSE feature encapsulates software engineering techniques, models, supporting CASE tools and development knowledge such as design patterns. We illustrate the applicability of our approach by modularizing four existing methodologies, Prometheus, ROADMAP, CaseLP and the conventional OO approach, into AOSE features.},
key = {Computer science},
keywords = {Adaptive systems;Artificial intelligence;Computer aided software engineering;Computer simulation;Knowledge engineering;Network protocols;Optimization;Software agents;Software engineering;},
note = {Agent oriented software engineering (AOSE);AOSE features;Modular methodology;},
} 



